= breadcrumbs "Set", "Do"

%h1= @item[:title]

%h2 Usage

%pre.code
  :preserve
    ∴ rvm [all|all-gemsets|&lt;ruby&gt;,...|&lt;path&gt;] [--verbose|--summary|--yaml|--json] do &lt;command&gt; ...
    ∴ rvm in &lt;path> do &lt;some-command&gt; ...

%p
  Executes arbitrary commands against given a set of rvm environments.
  Without additional flags it will execute the command directly without printing
  out extra rvm information.

%h2 Selectors

%ul.square
  =li_code "all",         "execute command in the default gemset of all rubies"
  =li_code "all-gemsets", "execute command in the all gemset for all rubies"
  =li_code "<ruby>,...",  "list of rubies to use, allows short versions or gemsets"
  =li_code "<path>",      "use ruby from the given path/project"

%h2 Modifiers

%ul.square
  =li_code "in",        "works with path and will additionally `cd` to the given directory"
  =li_code "--verbose", "display one line details about ruby/gemset"
  =li_code "--summary", "hide output and display summary of failures/success list only"
  =li_code "--yaml",    "hide output and display yaml summary of failures/success list only"
  =li_code "--json",    "hide output and display json summary of failures/success list only"

%h2 Examples

%p
  To execute <code>ruby -v</code> against all installed rubies and aliases, you would run:

  =sh_cmd "rvm all do ruby -v"

  If you want to execute it against a specific ruby (without extra logging
  / data printed by rvm as is done with normal set operations), you can instead do:

  =sh_cmd "rvm ree do ruby -v"

  Since it is a set operation, normal ruby specifiers will work. As an example, to run
  it against 1.9.2 and 1.8.7 you would run:

  =sh_cmd "rvm 1.9.2,1.8.7 do ruby -v"

  Or, to execute <code>gem env</code> against all gemsets:

  =sh_cmd "rvm all-gemsets do gem env"

  To execute <code>which ruby</code> in the current directory, loading a .rvmrc:

  =sh_cmd "rvm . do which ruby"

  To execute <code>rake test</code> in the project directory, loading a .rvmrc:

  =sh_cmd "rvm in /path/to/project do rake test"

  To interpret shell variables, or run more complicate programs:

  =sh_cmd "rvm ree do bash -c 'echo $GEM_HOME'"

  Notice the single quotes, this will delay resolving variables till the code is executed.

