= breadcrumbs "Deployment", "Best Practices"

%a{:name => "best-practices"}
%h1 Deployment Best Practices

%p
  When deploying with rvm, there are a few things to keep in mind. Please note that
  all of these are our suggested practices and are typically best setup on a new machine:

%h2 The Best Practice List

%ul
  %li
    Install RVM as root
    %pre.code
      :preserve
        root# bash < <(curl -s http://rvm.beginrescueend.com/install/rvm)>>
  %li
    Use one system user per project, preferably with the same shortname as the
    project.
  %li
    Use  gemset per-project
  %li
    Use a
    %a{:href => "http://rvm.beginrescueend.com/workflow/rvmrc/#project"}
      project .rvmrc
    for each project, for both development and deployment.
  %li
    When using
    %a{:href => "/integration/passenger/"} Phusion Passenger,
    ensure all projects use the same ruby.
  %li
    Use wrapper scripts for managing things like god, unicorns and the like.
    %pre.code
      :preserve
        user$ rvm help wrapper

  %li
    Use
    %a{:href => "http://bdsm.beginrescueend.com/"}
      BDSM
    'deploy' and 'rails' extensions for nicely integrated RVM deployment.
    %pre.code
      :preserve
        root# bdsm add rails deploy
        user$ bdsm bdsmrc
        user$ vim ~/bdsmrc     # Update any settings, repo, etc...
        user$ bdsm rails setup # Set up ~/shared path etc
        user$ vim ~/shared/config/database.yml # setup your db connection info.
        user$ bdsm deploy      # Updates ~/current with a fresh release.

    %p
      Do not forget backups, too many people do...
      %pre.code
        :preserve
          user$ bdsm rails backup_database
      Stick it in cron, make sure it happens nightly...
      %pre.code
        :preserve
          user$ crontab -e

          0 2 * * * bdsm rails backup_database

  %li
    If you "must" (::cough:: bullshit ::cough::) using Capistrano or the like,
    follow the
    %a{:href => "/integration/capistrano/"}
      capistrano integration guide
    closely

