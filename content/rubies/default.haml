---
title: "'rvm default' - setting default ruby for new terminals"
---

.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/rubies/" }
    Rubies
  &nbsp;>&nbsp;
  %a{ :href => "/rubies/default/" }
    Default
  %hr

%a{ :name => "default" }
%h1
  Setting the default Ruby
%p
  If you would like to make one specific Ruby be the default ruby that is
  selected when you open a new terminal shell, use the --default flag:
%pre.code
  :preserve
    $ rvm --default use 2.1.1

    $ ruby -v

    ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin12.0]

%p
  The next time you open a window Ruby 2.1.1 will be the selected ruby.
%p
  To switch back to your system ruby:
%pre.code
  :preserve
    $ rvm use system

    $ ruby -v

    ruby 2.0.0p451 (2014-02-24 revision 45167) [universal.x86_64-darwin13]

%p
  To switch at any time to the ruby you have selected as default:
%pre.code
  :preserve
    $ rvm default

    $ ruby -v

    ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin12.0]

%p
  To show what ruby is currently the selected default, if any, do:
  %pre.code
    :preserve
      $ rvm list

      rvm rubies

       * ruby-1.9.3-p484 [ x86_64 ]
         ruby-2.0.0-p481 [ x86_64 ]
      => ruby-2.1.1 [ x86_64 ]

      # => - current
      # =* - current && default
      #  * - default
%p
  If you wish to switch back to your system ruby as default, remember that RVM
  does not "manage" the system ruby and is "hands off".
%p
  This means to set the "system" ruby as default, you reset RVM's defaults as
  follows.
  %pre.code
    :preserve
      $ rvm reset

%p
  Note that "default" is merely implemented as an
  %a{ :href => "/rubies/alias/" } alias
  with an especially significant name.
%p
  If you encounter an error such as "RVM is not a function, selecting rubies
  with 'rvm use ...' will not work.", try using the
  %a{ :href => "/rubies/alias/" } alias
  action instead:
  %pre.code
    :preserve
      $ rvm alias create default 2.1.1
