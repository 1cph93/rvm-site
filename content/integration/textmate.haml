= breadcrumbs "Integration", "TextMate"

%h2 TextMate

%p First be sure your textmate is latest version

%p
  Next run the following script to make sure that your textmate bundles are up to date
  %pre.code
    :preserve
      #!/usr/bin/env bash

      mkdir -p /Library/Application\ Support/TextMate/

      sudo chown -R $(whoami) /Library/Application\ Support/TextMate

      cd /Library/Application\ Support/TextMate/

      if [[ -d Bundles/.svn ]] ; then
        cd Bundles && svn up
      else
        if [[ -d Bundles ]] ; then
          mv Bundles Bundles.old
        fi
        svn co http://svn.textmate.org/trunk/Bundles
      fi

      exit 0

%p
  Then in your shell, select an RVM ruby as a textmate ruby
  %pre.code
    :preserve
      ∴ rvm wrapper 1.9.2-head textmate

%p
  Please note that using this technique, you can also lock textmate to
  a specific gemset:
  %pre.code
    :preserve
      ∴ rvm wrapper 1.9.2-head@rails3 textmate

%p
  Following that, set TM_RUBY to /Users/wayne/.rvm/bin/textmate_ruby in:

  %pre.code
    :preserve
      Textmate | Preferences | Advanced | Shell Variables

%p
  section as per this skitch:
  %a{:href => "http://skitch.com/wayneeseguin/nw34t/rvm-textmate-ruby"}
    http://skitch.com/wayneeseguin/nw34t/rvm-textmate-ruby

%p
  Since textmate will use it's own builder, by removing it, we can use TM_RUBY as specified above (Thanks KinkyKamikaze!):
%pre.code
  :preserve
    cd /Applications/TextMate.app/Contents/SharedSupport/Support/lib/ ; mv Builder.rb Builder.rb.backup

%p
  Now quit textmate and re-open it for bundles and TM_RUBY settings to take effect.

%p
  You can now test if it is working by following these steps
  %ol
    %li Open a new document
    %li
      Put this code in the new document
      %pre.code
        :preserve
          puts RUBY_DESCRIPTION

    %li Save the file as 'ruby_test.rb'
    %li Press Command + R to run the ruby
  If you see something like this "ruby 1.9.1p378 (2010-01-10 revision 26273) [i386-darwin10.2.0]" most importantly the 'ruby 1.9.1' part then it is working as expected.

%p
  When you wish to switch out ruby versions simply rerun the wrapper command with the proper version:
  %pre.code
    :preserve
      ∴ rvm wrapper rbx textmate

%p
  If you need to update osx-plist for Ruby 1.9.X compatibility, this might be of some use:
%pre.code
  :preserve
    git clone git://github.com/kballard/osx-plist.git
    cd osx-plist/ext/plist
    ruby extconf.rb && make
    cp plist.bundle /Applications/TextMate.app/Contents/SharedSupport/Support/lib/osx/

%h2
  Notes

%p
  If you have issues with Ruby 1.9+, namely:

%pre.code
  :preserve
      ruby:0:in `require': /Users/someuserhere/Library/Application Support/TextMate/Bundles/Ruby.tmbundle/Support/RubyMate/catch_exception.rb:13: invalid multibyte char (US-ASCII) (SyntaxError)

%p
  You either need to check for updated versions of your bundles or manually edit the file in question, adding the following at the top of the file:

%pre.code
  :preserve
    # encoding: utf-8

%p
  Which forces Ruby to read the file with the correct text encoding, allowing multibyte characters.
  The alternative solution is to for ruby 1.9 to always be run in UTF-8 mode when called via textmate_ruby.
  To do this, simply edit the textmate_ruby file and replace the line containing:

%pre.code
  :preserve
    exec ruby "$@"

%p
  With a new line containing:

%pre.code
  :preserve
    exec ruby -wKU "$@"

%h2
  Community Resources
%p
  A few posts by UnderpantsGnome: 
  %a{:href => "http://underpantsgnome.com/2010/2/19/rvm-gemsets-textmate-yay"}
    "using Textmate + RVM + Cucumber"
  ,
  %a{:href => "http://underpantsgnome.com/2010/2/20/rvm-friendly-textmate-bundles"}
    "rvm + gemsets + TextMate == yay!"
  , and
  %a{:href => "http://underpantsgnome.com/2010/2/19/rvm-gemsets-textmate-yay-2"}
    "RVM + gemsets + TextMate == yay! * 2"

