.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/support/" }
    Support
  &nbsp;>&nbsp;
  %a{ :href => "/support/troubleshooting/" }
    Troubleshooting
  %hr

%a{:href => "#", :name => "top"}
%h1
  Troubleshooting
%p
  Here we will explore common issues and their resolutions.
  Visit me (wayneeseguin) in #rvm on irc.freenode.net and let me help you with any issues and please leave feedback!
%h2
  Before trying any solution below
%p
  %ul
    %li
      Make sure that you are on the latest gem version (rvm update) or git HEAD (rvm update --head).
    %li
      make sure that the sourcing of the RVM file occurs *last* in your profile files (.bash_profile / .bashrc / .zshrc) essentially after any customizations of PATH / functions or aliases.
    %li
      Be sure to be using either bash or zsh, RVM (latest versions preferred) is untested at best in other shells.

%a{:href => "#", :name => "segfault"}
%h2
  Segfaults
%p
  If you see segfaults in 1.8.7 and 1.9.1, perhaps 'spec_fetcher.rb' or some other library this is a known bug for both ruby versions.
  Please see the ruby-lang.org issue for details:
  %a{:href => "http://redmine.ruby-lang.org/issues/show/2597"}
    http://redmine.ruby-lang.org/issues/show/2597
  If you downgrade to 'rvm install 1.8.7-p174' for now the issue had not been introduced at that point.
  You can set '1.8.7-p174' as the default patchlevel for now in ~/.rvm/config/user which overrides rvm's defaults.

  Simply set:
  %pre.code
    :preserve
      ruby_1.8.7_patch_level=174

%a{:href => "#", :name => "i386"}
%h2
  i386 (32 bit)
%p
  I need to compile ruby X as i386 (32 bit).
%pre.code
  :preserve
    export CFLAGS='-m32' ; export CXXFLAGS='-m32' ; export LDFLAGS='-m32' ; rvm install X

%a{:href => "#", :name => "segfault"}
%h2
  Bus Error / Segfault
%p
  When a command you try to run produces a segfault, possibly like the one below:
%pre.code
  :preserve
    [BUG] cross-thread violation on rb_gc()

%p
  In every case of this I have seen thus far it has always ended up being that a ruby gem/library
  with C extensions was compiled against a different ruby and/or architecture than the one that
  is trying to load it. Try uninstalling &amp; reinstalling gems with C extensions that your
  application uses to hunt this buggar down.

%a{:href => "#", :name => "mysql"}
%h2
  MySQL
%p
  If you are having issues installing MySQL gem for a ruby please visit the
  %a{:href => "/integration/databases"}
    MySQL page.

%a{:href => "#", :name => "passenger"}
%h2
  Passenger
%p
  If you are having issues getting passenger running with an RVM installed ruby, most likely you missed the '.bin/[ruby string]' comment on the
  %a{:href => "/passenger"}
    passenger page.

%a{:href => "#", :name => "readline"}
%h2
  Readline
%p
  If you have an error when compiling pertaining to readline, you may need to attempt installing with the following configure option:
  %br
  %pre.code
    :preserve
    rvm install readline ; rvm remove 1.9.1 ; rvm install 1.9.1 -C --with-readline-dir=$rvm_path/usr
%p
  Note that this error occurs most often when having a macports installed readline along your path.
  Next most often is when the readline development headers are not available in your path.
%p
  If you simply cannot seem to get this to work you can have RVM install a copy of readline into ~/.rvm/usr like so:
  %br
  %pre.code
    :preserve
      rvm install readline
      rvm remove 1.9.1 ; rvm install 1.9.1
%p
  Be sure you are on either RVM git head or release 0.0.78+ as it has some essential bug fixes for this to work properly.
%p
  Then

%a{:href => "#", :name => "iconv"}
%h2
  require "iconv" # => false ?!
%p
  If you have issues with iconv not being available in ruby / irb please try the following configure option:
%pre.code
  :preserve
    rvm install iconv ; rvm remove 1.9.1 ; rvm install 1.9.1 -C --with-iconv-dir=$rvm_path/usr
%p
  Where you replace '/usr/local' with the prefix where your iconv libraries are. (Thanks to Justin Chen for bringing this doosey to our attention!)
%p
  If you simply cannot seem to get this to work you can have RVM install a copy of readline into ~/.rvm/usr like so:
  %br
  %pre.code
    :preserve
      rvm install iconv
      rvm remove 1.9.1 ; rvm install 1.9.1
%p
  Be sure you are on either RVM git head or release 0.0.78+ as it has some essential bug fixes for this to work properly.

%a{:href => "#", :name => "curl"}
%h2
  curl failing, 'curl is' ?!
%p
  If you see this:
%pre.code
  :preserve
    ++ curl is /opt/local/bin/curl -O -L -s -C - ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p383.tar.gz
    curl: Remote file name has no length!
    curl: try 'curl --help' or 'curl --manual' for more information
%p
  Then maybe you have aliased or symlinked the 'which' command to the 'type' command, revert this and RVM should work.

%a{:href => "#", :name => "pg"}
%h2
  I can't seem to install the pg gem.
%p
  Prepend with a variable assignment for PATH with the location of the pg_config file, for example:
%pre.code
  :preserve
    PATH=/Users/wayne/.dbm/postgresql-8.4.0/bin:$PATH gem install pg --no-rdoc --no-ri

%h2
  ruby-debug19 on -head for 1.9.X
%pre.code
  :preserve
    # point ruby-debug-19 at the source files
    gem install ruby-debug19 -- --with-ruby-include=$rvm_src_path/$rvm_ruby_string

