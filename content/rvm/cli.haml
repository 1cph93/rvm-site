.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/rvm/" }
    rvm
  &nbsp;>&nbsp;
  %a{ :href => "/rvm/cli/" }
    CLI
  %hr

%h1
  RVM CLI Usage
%p
  RVM comes with many options however it has lots of defaults that are intended on making the command line API much more 'natural'.
%h3
  RVM general usage API
%pre.code
  :preserve
    rvm action [interpreter] [flags] [options]
%a{ :name => "cli-actions" }
%h3
  Where "action" is one of
%pre.code
  :preserve
    * usage   - show this usage information
    use       - setup current shell to use a specific ruby version
    info      - show information for current ruby
    list      - show currently installed versions
    reload    - reload RVM source itself (useful after changing RVM source)
    implode   - removes all ruby installations it manages, everything in ~/.rvm
    get       - {latest,head} upgrades RVM to the latest or git head version.
    reset     - remove default and current settings, exit the shell.
    (If you experience odd behavior try this first)
    debug     - emit environment &amp; configuration information for *current* ruby

    install   - install one or many ruby versions
    uninstall - uninstall one or many ruby versions, leaves their sources
    remove    - uninstall one or many ruby versions and remove their sources

    ruby      - runs a named ruby file against specified and/or all rubies
    gem       - runs a gem command using selected ruby's 'gem'
    rake      - runs a rake task against specified and/or all rubies
    tests     - runs 'rake test' across selected ruby versions
    specs     - runs 'rake spec' across selected ruby versions

    gemdir    - switch to gem directory for installation (new login shell)
    srcdir    - switch to src directory for the current ruby installation
%a{ :name => "cli-interpreter" }
%h3
  And where [interpreter] is one of
%pre.code
  :preserve
    * ruby    - MRI/YARV Ruby (The Standard), defaults to 1.8.6
    jruby     - JRuby
    rbx       - rubinius
    ree       - ruby Enterprise Edition
    system    - use the system ruby (eg. pre-RVM state)
    default   - use RVM set default ruby and system if it hasn't been set.
%a{ :name => "cli-flags" }
%h3
  And where [flags] are one of
%pre.code
  :preserve
    --default     - when used with ruby selection, sets a default ruby for new shells.
    --debug       - Toggle debug mode on for very verbose output.
    --force       - Force install, removes old install & source before install.
    --all         - Used with 'rvm list' to display 'most' available versions.
    --dump        - Used with gemset to dump the current ruby's gemset.
    --load        - Used with gemset to load a specified gemset file
    --summary     - Used with rubydo to print out a summary of the commands run.
    --reconfigure - Force ./configure on install even if Makefile already exists.
%a{ :name => "cli-options" }
%h3
  And where [options] are one of
%pre.code
  :preserve
    -v|--version    - Emit RVM version loaded for current shell
    -h|--help       - Emit this output and exit
    -l|--level      - patch level to use with rvm use / install
    --tag        - subversion tag to use
    --rev        - repository revision # to use or 'head' for

    --prefix     - path for all RVM files (~/.rvm/), with trailing slash!
    --bin        - path for binaries to be placed (~/.rvm/bin/)
    --source     - src directory to use (~/.rvm/src/)
    --archives   - directory for downladed files (~/.rvm/archives/)
    -S|--script     - Specify a script file to attempt to load and run (rubydo)
    -G|--gems       - root gem path to use
    -C|--configure  - custom configure options, comma separated, double quote
                      args that need quoting, default: --enable-shared=true
    --reconfigure   - Force installer to re-run configure if already run
    --make          - custom make command
    --make-install  - custom make install command
    --nice          - process niceness (for slow computers, default 0)
    -m|--gem-set    - use a named gemset, instead of the default set.
    --rm-gem-set    - Remove a named gemset
%a{ :name => "usage-notes" }
%h2
  Usage Notes:
%ul
  %li
    Defaults above are denoted with a '*' prefix.
