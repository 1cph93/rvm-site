%h1 Installing RVM
%p
  There are two very different ways to use RVM.
%ul
  %li
    As a User
  %li
    As Root
    ( be *very* sure you know what you are doing... )
  %p
    Don't forget to set your
    %a{:href => "/rubies/default/"} default ruby
    after you install so that your command line opens with ruby enabled.
%p
  There are at least 3 ways to install RVM.
%h2
  Github Repository (recommended)
%p
  To install / update from the github repository (recommended):
%pre.code
  :preserve
    bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )
%p
  What this script essentially does is the following, with some extra checks and tweaks:
%pre.code
  :preserve
    mkdir -p ~/.rvm/src/ && cd ~/.rvm/src && rm -rf ./rvm/ && git clone --depth 1 git://github.com/wayneeseguin/rvm.git && cd rvm && ./install
%p
  Note that if you are behind a firewall (slower, but it should work), change the git:// to http:// like this:
%pre.code
  :preserve
    mkdir -p ~/.rvm/src/ && cd ~/.rvm/src && rm -rf ./rvm/ && git clone --depth 1 http://github.com/wayneeseguin/rvm.git && cd rvm && ./install

%h2
  2. Installing / updating the latest rvm from the latest source tarball
%pre.code
  :preserve
    bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-latest )
%p
  What this script essentially does is the following, with some extra checks and tweaks:
%pre.code
  :preserve
    version=$(curl http://rvm.beginrescueend.com/releases/stable-version.txt);
    mkdir -p ~/.rvm/src/ && cd ~/.rvm/src/ && curl -O http://rvm.beginrescueend.com/releases/rvm-${version}.tar.gz | tar zxf - && cd rvm-${version} && ./install

%h2
  3. Installing from a gem (not recommended)
%p
  First install the gem. After the gem has installed run the rvm-install script.
%pre.code
  :preserve
    ∴ gem install rvm                 # Install the RVM gem
    # Adjust the path below for whever your system gem bin directory is located
    ∴ ~/.gem/ruby/1.8/bin/rvm-install # Install RVM, adds hooks for bash & zsh

%p
  If rvm-install is not found at the path listed it is likely because your users gem home is not in your path.
  You can find out the path to use by running
  %pre.code
    :preserve
      ∴ gem env gemdir

  This will show something like /Users/wayne/.gem/ruby/1.8

%h1
  Post Install
%p
  Only necessary the first time, put the following line into your profile at the very end, after all path loads etc...
%pre.code
  :preserve
    if [[ -s "$HOME/.rvm/scripts/rvm" ]]  ; then source "$HOME/.rvm/scripts/rvm" ; fi
%p
  Then load the new code into your current shell and start using RVM ! w00t!
%pre.code
  :preserve
    ∴ source ~/.rvm/scripts/rvm

%p
  Be sure to install any dependencies for your operating system.
%pre.code
  :preserve
    ∴ rvm notes
%p
  Now add the sourcing line to your profiles:
%pre.code
  :preserve
    for profile in .bash_profile .bashrc ; do echo 'if [[ -s "$HOME/.rvm/scripts/rvm" ]]  ; then source "$HOME/.rvm/scripts/rvm" ; fi' >> $HOME/$profile done

%h3
  NOTE
%p
  Alternatively you can call it manually:
%pre.code
  :preserve
    ∴ ~/.gem/ruby/1.8/bin/rvm-install
    (rvm installs :) )

%h1 Bootstrap script
%p
  The following script will boostrap git + RVM assuming that you have curl & sudo installed.
  It will also install (last line) several common rubies.

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    mkdir -p $HOME/.rvm/src && cd $HOME/.rvm/src && package = git && version=1.6.5.3
    curl -O http://kernel.org/pub/software/scm/git/$package-$version.tar.gz
    cd $package-$version && ./configure --prefix=/usr/local && make && sudo make install

    # Install RVM
    bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )

    # Install some rubies
    source $HOME/.rvm/scripts/rvm
    rvm install ree,1.9.2-head,jruby

%h1 Notes & Warnings
%ul
  %li Do NOT 'return' from inside the .bashrc file or else RVM will be prevented from working properly.
  %li Be sure that scripts/rvm is sourced at the end of your profiles, after any PATH or other environmental settings.

