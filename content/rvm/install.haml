%h1 Installing RVM

%p There are two fundamentally different ways to install and configure RVM.

%ul
  %li Single-User installation as a standard user (<strong>for developers</strong>)
  %li Multi-User installation as root (<strong>for server administrators</strong>)

%p <strong style="color: red;">For most purposes, the recommended installation method is Single-User</strong>, which is a self-contained RVM installation in a user's home directory.


%p <strong>All multi-user instructions must be run by prefixing with the 'sudo' command.</strong> The installation process is similar for both installation methods, however, when installing a multi-user configuration, do not run the installer directly as root. Always use the sudo command. Certain portions of the install process such as the rvm group membership addition will not add your user to the rvm group if done directly as root. There are also potential permissions concerns. The installer, when run using sudo, will ensure root is added to the group as well.

%h4 To update an existing RVM installation

%p
  It is safe to run the installation script again, or you can follow the
  %a{:href => "/rvm/upgrading/"}
    upgrading docs.

%h2 Installation

%p I recommend you <a href="https://rvm.beginrescueend.com/install/rvm">read the installation script</a> yourself. This will give you a chance to understand what it is doing <i>before</i> installing, and allow you to feel more comfortable running it if you do so.

%h3 1. Download and run the RVM installation script
%h4 Installing the latest release version in git:
%pre.code
  :preserve
    user$ bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)
%p
  For a Multi-User install you would execute the following:
  %pre.code
    :preserve
      user$ sudo bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

%h4 Installing a specific version:

%pre.code
  :preserve
    user$ curl -s https://rvm.beginrescueend.com/install/rvm -o rvm-installer ; chmod +x rvm-installer ; ./rvm-installer --version latest

%p
  For a Multi-User install you would do:
  %pre.code
    :preserve
      user$ curl -s https://rvm.beginrescueend.com/install/rvm -o rvm-installer ; chmod +x rvm-installer ; sudo ./rvm-installer --version latest

%h4 Single-User Install Location: ~/.rvm/
%p
  If the install script is run as standard, non-root user, RVM will install into the current users's home directory.

%h4 Multi-User Install Location: /usr/local/rvm
%p
  If the install script is run as root, RVM will automatically install into /usr/local/rvm

%p
  <strong>If the rvm install script does nothing or complains about certificates</strong>
  you can bypass this by adding a '-k' switch to the curl command:

%p
  For Single-User installs
%pre.code
  :preserve
    user$ bash &lt; &lt;(curl -sk https://rvm.beginrescueend.com/install/rvm)
%p
  For a Multi-User install you would do:
%pre.code
  :preserve
    user$ sudo bash &lt; &lt;(curl -sk https://rvm.beginrescueend.com/install/rvm)

%h3 2. Load RVM into your shell sessions as a function
%em
  Throughout these instructions, you may replace .bash_profile with the appropriate startup script for your bash-compatible shell. For other shells you may need to modify these commands. Zsh should be able to use these commands unmodified.

%h4 Single-User:

%p
  Load RVM by appending the rvm function sourcing to your .bash_profile:
  
%pre.code
  :preserve
    user$ echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile

%h4 Multi-User:

%p
  The rvm function will be automatically configured for every user on the system if you install as root.
  This is accomplished by loading /etc/profile.d/rvm.sh on login. Most Linux distributions default to parsing /etc/profile which contains the logic to load all files residing in the /etc/profile.d/ directory.

%h3 3. Reload shell configuration &amp; test

%p Close out your current shell or terminal session and open a new one. You may attempt reloading your .bash_profile with the following command:

%pre.code
  :preserve
    user$ source .bash_profile

%p
  However, closing out your current shell or terminal and opening a new one is the preferred way for initial installations.

%p 
  If installation and configuration were successful, RVM should now load whenever you open a new shell.
  This can be tested by executing the following command which should output <i>'rvm is a function'</i> as shown below.

%pre.code
  :preserve
    user$ type rvm | head -1
    rvm is a function

%p
  Finally, see if there are any dependency requirements for your operating system by running:

%pre.code
  :preserve
    user$ rvm notes

%p
  %strong NOTE:
  Whenever you upgrade RVM in the future, you should always run <i>'rvm notes'</i> as this is usually where you will find details on any major changes and/or additional requirements to ensure your installation stays working. Also, you should also run the above command on any fresh installs. This is where all your additionals will be noted making it an extremely important stop on your way to RVM bliss!
  
%h4 Congratulations! You have successfully installed RVM.

%p
  <strong>Multi-User Install Note:</strong> After installation, where you would normally use 'sudo', non-root users will need to use 'rvmsudo'. This may affect, or break, some deployment scripts. Below are 2 detailed examples:
  
%pre.code
  :preserve
    # Incorrect, this will fail
    user$ sudo gem install xxxx

    # Correct usage, this will succeed
    user$ rvmsudo gem install xxxx

%h2 Try out your new RVM installation

%p
  Below are some examples of how to install and use a Ruby under RVM.

%p
  Display a list of all "known" rubies. NOTE: RVM can install many more Rubies not listed.

%pre.code
  :preserve
    user$ rvm list known
    # MRI Rubies
    ...
    [ruby-]1.8.7[-p334]
    [ruby-]1.8.7-head
    ...
    [ruby-]1.9.2[-p180]
    [ruby-]1.9.2-head
    ruby-head

    # JRuby
    jruby-1.2.0

    ...

%p Install a version of Ruby (eg 1.9.2):

%pre.code
  :preserve
    user$ rvm install 1.9.2
    Installing Ruby from source to: /Users/user/.rvm/rubies/ruby-1.9.2-p180, this may take a while depending on your cpu(s)...

    ruby-1.9.2-p180 - #fetching
    ruby-1.9.2-p180 - #downloading ruby-1.9.2-p180, this may take a while depending on your connection...
    ...
    ruby-1.9.2-p180 - #extracting ruby-1.9.2-p180 to /Users/user/.rvm/src/ruby-1.9.2-p180
    ruby-1.9.2-p180 - #extracted to /Users/user/.rvm/src/ruby-1.9.2-p180
    ruby-1.9.2-p180 - #configuring
    ruby-1.9.2-p180 - #compiling
    ruby-1.9.2-p180 - #installing
    ...
    Install of ruby-1.9.2-p180 - #complete

%p Use the newly installed Ruby:

%pre.code
  :preserve
    user$ rvm use 1.9.2
    Using /Users/user/.rvm/gems/ruby-1.9.2-p180

%p Check this worked correctly:
%pre.code
  :preserve
    user$ ruby -v
    ruby 1.9.2p180 (2011-02-18 revision 30909) [i386-darwin9.8.0]

    user$ which ruby
    Using /Users/user/.rvm/gems/ruby-1.9.2-p180/bin/ruby

%p Optionally, you can set a version of Ruby to use as the default for new shells. Note that this overrides the 'system' ruby:

%pre.code
  :preserve
    user$ rvm use 1.9.2 --default

%h2 Enjoy using RVM!

%h3
  Where to now?
%p
  If you are new to RVM I recommend that you read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    basics page.
  At the end of the basics page there are further links for
  getting started.

%h2 Troubleshooting Your Install

%ul
  %li
    %p If you open a new shell and running:
    = sh_cmd "type rvm | head -1"
    %p
      does
      %em not
      show "rvm is a function", RVM isn't being sourced correctly.

  %li
    %p
      Ensure that RVM is sourced after any path settings as RVM and manipulates the path.
      If you don't do this, RVM may not work as expected.

  %li
    %p
      If you are using GNOME on Red Hat, CentOS or Fedora, ensure that the
      %em Run command as login shell
      option is checked under the
      %em Title and Command
      tab in
      %em Profile Preferences.
      After changing this setting, you may need to exit your console session and start
      a new one before the changes take affect.

%h3 Example RVM bootstrap script

%p
  The following script will boostrap git + RVM, assuming that you have curl and sudo installed.
  The last line of the script will also install several commonly used Rubies for you.

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    bash &lt; &lt;( curl -s https://rvm.beginrescueend.com/install/git )

    # Install RVM
    bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

    # Install some Rubies
    source "$HOME/.rvm/scripts/rvm"
    rvm install 1.9.2,rbx,jruby

%p
  For a Multi-User install you would use:

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    sudo bash &lt; &lt;( curl -s https://rvm.beginrescueend.com/install/git )

    # Install RVM
    sudo bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

    # Install some Rubies
    source "/usr/local/rvm/scripts/rvm"
    rvm install 1.9.2,rbx,jruby
